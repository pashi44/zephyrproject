name: Zephyr CI Build and Flash

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: 🔧 Build Firmware
    runs-on: ubuntu-latest

    env:
      ZEPHYR_TOOLCHAIN_VARIANT: zephyr
      ZEPHYR_SDK_INSTALL_DIR: /opt/zephyr-sdk

    steps:
      - name: 📦 Checkout Source
        uses: actions/checkout@v4

      # 🧠 Cache pip (Python) dependencies
      - name: 💾 Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('zephyr/scripts/requirements.txt') }}
          restore-keys: |
            pip-

      # 🧠 Cache APT packages
      - name: 💾 Cache APT packages
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: apt-${{ runner.os }}-v1
          restore-keys: |
            apt-${{ runner.os }}-

      # 🧠 Cache west modules
      - name: 💾 Cache Zephyr Modules
        uses: actions/cache@v4
        with:
          path: |
            .west
            modules
            zephyr
            tools
          key: west-${{ hashFiles('west.yml') }}
          restore-keys: |
            west-

      - name: 🧰 Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            cmake ninja-build gperf ccache dfu-util \
            device-tree-compiler wget python3-pip python3-setuptools python3-wheel \
            python3-dev python3-ply python3-colorama python3-click \
            python3-yaml python3-pyelftools build-essential unzip

      - name: 📥 Init West + Zephyr Modules
        run: |
          pip3 install west
          west init
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt

      - name: 📥 Install Zephyr SDK
        run: |
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
          tar -xf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
          sudo mv zephyr-sdk-0.16.4 /opt/zephyr-sdk
          sudo /opt/zephyr-sdk/setup.sh -t all -c

      - name: 🛠️ Build Firmware
        run: |
          west build -b esp32 samples/hello_world --build-dir build --pristine

      - name: ☁️ Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: zephyr-firmware
          path: build/
          retention-days: 2
          compression-level: 0

  flash:
    name: 🚀 Flash to ESP32
    needs: build
    runs-on: [self-hosted]

    env:
      ZEPHYR_TOOLCHAIN_VARIANT: zephyr
      ZEPHYR_SDK_INSTALL_DIR: /opt/zephyr-sdk

    steps:
      - name: 📦 Checkout Source
        uses: actions/checkout@v4

      # Reuse same caches on self-hosted runner
      - name: 💾 Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('zephyr/scripts/requirements.txt') }}
          restore-keys: |
            pip-

      - name: 💾 Cache Zephyr Modules
        uses: actions/cache@v4
        with:
          path: |
            .west
            modules
            zephyr
            tools
          key: west-${{ hashFiles('west.yml') }}
          restore-keys: |
            west-

      - name: ⬇️ Download Firmware Artifact
        uses: actions/download-artifact@v4
        with:
          name: zephyr-firmware
          path: build

      - name: 🧰 Setup West & Dependencies
        run: |
          pip3 install west
          west init 
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt

      - name: 🛠️ Rebuild Flash Context
        run: |
          west build -d build --pristine --board esp32

      - name: 🚀 Flash to ESP32
        run: |
          if [ -f build/zephyr/zephyr.elf ]; then
            echo "✅ Flashing to ESP32..."
            west flash -d build --runner esptool 
          else
            echo "❌ zephyr.elf not found!" && exit 1
          fi
